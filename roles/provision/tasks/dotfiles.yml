---
- name: Ensure .config exists in home
  ansible.builtin.file:
    dest: "{{ home }}/.config"
    state: directory
    owner: "{{ uid }}"
    group: "{{ gid }}"
    mode: "0755"

- name: Ensure nvim exists in .config
  ansible.builtin.file:
    dest: "{{ home }}/.config/nvim"
    state: directory
    owner: "{{ uid }}"
    group: "{{ gid }}"
    mode: "0755"

- name: Copy kickstart.nvim dependencies
  ansible.builtin.copy:
    src: kickstart.nvim/lua
    dest: "{{ home }}/.config/nvim/"
    owner: "{{ uid }}"
    group: "{{ gid }}"
    mode: "0755"

- name: Copy init.lua
  ansible.builtin.template:
    src: kickstart.nvim/init.lua.j2
    dest: "{{ home }}/.config/nvim/init.lua"
    owner: "{{ uid }}"
    group: "{{ gid }}"
    mode: "0644"

# - name: Clone kickstart.nvim
#   ansible.builtin.git:
#     repo: "https://github.com/encephala/kickstart.nvim.git"
#     dest: "{{ home }}/.config/nvim"
#   become: true
#   become_user: "{{ provision_username }}"

- name: Run kickstart.nvim setup
  ansible.builtin.command:
    cmd: nvim --headless "+Lazy! sync" +qa
    creates: "{{ home }}/.local/share/nvim/"


- name: Bash
  when: ansible_user_shell == "/bin/bash"
  block:
    - name: Set long bash history
      ansible.builtin.lineinfile:
        path: "{{ home }}/.bashrc"
        regexp: "{{ item.find }}"
        line: "{{ item.line }}"
      loop:
        - { find: "^HISTSIZE=*", line: "HISTSIZE=5000" }
        - { find: "^HISTFILESIZE=*", line: "HISTFILESIZE=10000" }

    - name: Add aliases
      ansible.builtin.copy:
        src: bash/dotbash_aliases
        dest: "{{ home }}/.bash_aliases"
        owner: "{{ uid }}"
        group: "{{ gid }}"
        mode: "0644"

    - name: Git branch in PS1 helper files
      ansible.builtin.copy:
        src: git/dotgit/
        dest: "{{ home }}/.git/"
        owner: "{{ uid }}"
        group: "{{ gid }}"
        mode: "0644"

    - name: Set bash prompt strings
      ansible.builtin.blockinfile:
        path: "{{ home }}/.bashrc"
        block: |
          # Git stuff
          . "$HOME/.git/git-completion.bash"
          . "$HOME/.git/git-prompt.sh"

          export GIT_PS1_SHOWDIRTYSTATE=1
          export GIT_PS1_SHOWSTASHSTATE=1
          export GIT_PS1_SHOWUNTRACKEDFILES=1
          export GIT_PS1_SHOWUPSTREAM=1
          export PS2="\[\e[38;5;204m\]>\[\e[00m\] "

          # Set PS1
          # Function needed to dynamically set exit code
          __prompt_command() {
            local EXIT_CODE="$?"

            local GREEN='\[\e[01;32m\]'
            local RED='\[\e[01;31m\]'
            local BLUE='\[\e[01;34m\]'
            local BRIGHT_PINK='\[\e[38;5;204m\]'
            local NORMAL='\[\e[0m\]'

            if [ $EXIT_CODE == 0 ]; then
              PS1="$GREEN$EXIT_CODE"
            else
              PS1="$RED$EXIT_CODE"
            fi

            PS1="$PS1 $GREEN\H \A $BLUE\w$BRIGHT_PINK\$(__git_ps1)\n$GREEN>$NORMAL "
          }

          export PROMPT_COMMAND=__prompt_command

    - name: Set editor to vim
      ansible.builtin.lineinfile:
        path: "{{ home }}/.bashrc"
        regexp: "^export EDITOR=*"
        line: "export EDITOR=vim"


- name: Copy .gitconfig
  ansible.builtin.copy:
    src: git/dotgitconfig
    dest: "{{ home }}/.gitconfig"
    owner: "{{ uid }}"
    group: "{{ gid }}"
    mode: "0644"

- name: Copy .lintr
  ansible.builtin.copy:
    src: R/dotlintr
    dest: "{{ home }}/.lintr"
    owner: "{{ uid }}"
    group: "{{ gid }}"
    mode: "0644"

- name: SSH
  block:
    - name: Ensure .ssh exists
      ansible.builtin.file:
        dest: "{{ home }}/.ssh"
        state: directory
        owner: "{{ uid }}"
        group: "{{ gid }}"
        mode: "0700"

    - name: Copy SSH config
      ansible.builtin.copy:
        src: ssh/config
        dest: "{{ home }}/.ssh/config"
        owner: "{{ uid }}"
        group: "{{ gid }}"
        mode: "0644"

- name: Copy .zshrc
  ansible.builtin.template:
    src: zsh/dotzshrc.j2
    dest: "{{ home }}/.zshrc"
    owner: "{{ uid }}"
    group: "{{ gid }}"
    mode: "0644"

- name: Markdown Lint
  block:
    - name: Copy .mdlrc
      ansible.builtin.copy:
        src: mdlint/.mdlrc
        dest: "{{ home }}/.mdlrc"
        owner: "{{ uid }}"
        group: "{{ gid }}"
        mode: "0644"

    - name: Copy mdlint style files
      ansible.builtin.copy:
        src: mdlint/.mdlstyle.rb
        dest: "{{ home }}/.mdlstyle.rb"
        owner: "{{ uid }}"
        group: "{{ gid }}"
        mode: "0644"

- name: Yamllint config
  block:
    - name: Ensure yamllint config dir exists
      ansible.builtin.file:
        path: "{{ home }}/.config/yamllint"
        state: directory
        owner: "{{ uid }}"
        group: "{{ gid }}"
        mode: "0755"

    - name: Copy yamllint config
      ansible.builtin.copy:
        src: yamllint/config
        dest: "{{ home }}/.config/yamllint/config"
        owner: "{{ uid }}"
        group: "{{ gid }}"
        mode: "0644"
